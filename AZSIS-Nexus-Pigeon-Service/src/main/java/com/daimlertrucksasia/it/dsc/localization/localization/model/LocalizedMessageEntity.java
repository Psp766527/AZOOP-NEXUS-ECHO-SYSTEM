package com.daimlertrucksasia.it.dsc.localization.localization.model;

import jakarta.persistence.*;
import lombok.*;

/**
 * Entity representing a localized message stored in a relational (PostgreSQL) database.
 *
 * <p>
 * Each record maps a message template to a specific locale, allowing dynamic message
 * rendering based on language and regional preferences.
 * </p>
 *
 * <p>
 * This entity includes provider and consumer service metadata and optionally
 * links to a rich content template.
 * </p>
 *
 * <p>
 * The database enforces a compound unique constraint across:
 * <ul>
 *   <li>{@code msgTemplateID}</li>
 *   <li>{@code locale}</li>
 *   <li>{@code serviceProviderID}</li>
 *   <li>{@code serviceConsumerID}</li>
 * </ul>
 * to ensure a message is uniquely defined for that combination.
 * </p>
 *
 * <p>
 * Rich content templates are represented using a transient field ({@code richContentTemplate}),
 * which is not persisted but may be populated at runtime via a service layer.
 * </p>
 *
 * @see RichContentTemplate
 * @since 1.0
 */
@Entity
@Table(
        name = "localized_message",
        uniqueConstraints = @UniqueConstraint(
                name = "uk_msg_locale_provider_consumer",
                columnNames = {"msg_template_id", "locale", "service_provider_id", "service_consumer_id"}
        )
)
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class LocalizedMessageEntity {

    /**
     * Primary key auto-generated by PostgreSQL.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Logical identifier for the message template.
     * This links multiple localized versions of a message.
     */
    @Column(name = "msg_template_id", nullable = false)
    private String msgTemplateID;

    /**
     * Locale code in standard format (e.g., "en_US", "de_DE").
     */
    @Column(name = "locale", nullable = false)
    private String locale;

    /**
     * The translated/localized message content.
     */
    @Column(name = "message", columnDefinition = "TEXT", nullable = false)
    private String message;

    /**
     * ID of the service that owns or manages this localized message.
     */
    @Column(name = "service_provider_id", nullable = false)
    private String serviceProviderID;

    /**
     * ID of the consumer service that utilizes this localized message.
     */
    @Column(name = "service_consumer_id", nullable = false)
    private String serviceConsumerID;

    /**
     * Identifier for the associated rich content template (if any).
     */
    @Column(name = "rich_content_template_id")
    private String richContentTemplateID;

    /**
     * Transient field representing the runtime-enriched rich content template.
     *
     * <p>
     * This field is not persisted in the database. It is meant to be populated
     * at runtime using a service or repository that loads {@link RichContentTemplate}.
     * </p>
     */
    @Transient
    private RichContentTemplate richContentTemplate;

    /**
     * Flag indicating whether this message has an associated template.
     * Useful for UI or template rendering logic.
     */
    @Column(name = "enable_template_association")
    private boolean enableTemplateAssociation;
}
